{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App/App.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","items","onDelete","length","map","name","id","number","key","className","styles","item","AsYouType","input","button","type","onClick","ContactForm","state","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onAddItem","clearState","this","onSubmit","maxLength","placeholder","onChange","required","pattern","Component","Filter","filter","setFilter","prevProps","prevState","contacts","onFiltrate","loginInputId","uuid","App","filtratedContacts","addItem","every","contact","toLocaleLowerCase","itemToAdd","alert","deleteItem","filterContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5093075b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__2UHdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__LQNpB\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AsYouType } from 'libphonenumber-js';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ items, onDelete }) => {\n  return (\n    items.length && (\n      <ul>\n        {items.map(({ name, id, number }) => {\n          return (\n            <li key={id} className={styles.item}>\n              <span>\n                {name} {new AsYouType('US').input(number)}\n              </span>\n              <button\n                className={styles.button}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddItem: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.name && this.state.number) {\n      this.props.onAddItem({ ...this.state });\n    }\n    this.clearState();\n  };\n\n  clearState = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          maxLength=\"36\"\n          placeholder=\"Enter your name...\"\n          onChange={this.handleChange}\n          value={name}\n          required\n        />\n        <input\n          maxLength=\"10\"\n          name=\"number\"\n          placeholder=\"Enter your number...\"\n          onChange={this.handleChange}\n          value={number}\n          pattern=\"^[ 0-9]+$\"\n          required\n        />\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  state = {\n    filter: '',\n  };\n\n  static propTypes = {\n    onFiltrate: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { filter } = this.state;\n    const { contacts, onFiltrate } = this.props;\n    if (prevProps.contacts !== contacts || prevState.filter !== filter) {\n      onFiltrate(contacts, filter);\n    }\n  }\n\n  setFilter = ({ target }) => {\n    this.setState({\n      filter: target.value,\n    });\n  };\n\n  render() {\n    const loginInputId = uuid();\n    const { filter } = this.state;\n    return (\n      <form>\n        <h3>Find contact by name</h3>\n        <input\n          onChange={this.setFilter}\n          type=\"text\"\n          name=\"filter\"\n          id={loginInputId}\n          placeholder=\"Enter a name to search...\"\n          value={filter}\n        />\n      </form>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filtratedContacts: [],\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addItem = item => {\n    if (\n      this.state.contacts.every(\n        contact =>\n          contact.name.toLocaleLowerCase() !== item.name.toLocaleLowerCase(),\n      )\n    ) {\n      const itemToAdd = { ...item, id: uuid() };\n      this.setState(state => ({\n        contacts: [...state.contacts, itemToAdd],\n      }));\n    } else {\n      alert(`${item.name} is already in contacts!`);\n    }\n  };\n\n  deleteItem = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterContacts = (contacts, filter) => {\n    this.setState({\n      filtratedContacts: contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n      ),\n    });\n  };\n\n  render() {\n    const { contacts, filtratedContacts } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onAddItem={this.addItem} />\n        <h2>Contacts</h2>\n        <Filter contacts={contacts} onFiltrate={this.filterContacts} />\n\n        {filtratedContacts.length ? (\n          <ContactList items={filtratedContacts} onDelete={this.deleteItem} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__3Dw6P\",\"item\":\"ContactList_item__wvrlD\"};"],"sourceRoot":""}